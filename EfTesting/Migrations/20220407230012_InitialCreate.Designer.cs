// <auto-generated />
using System;
using EfTesting.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfTesting.Migrations
{
    [DbContext(typeof(FecContext))]
    [Migration("20220407230012_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EfTesting.Dto.FormBaseDto", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniqueId"), 1L, 1);

                    b.Property<short>("AmendmentNum")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DateSigned")
                        .HasColumnType("datetime2");

                    b.Property<string>("FecFilingId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FilingCommitteeAddressLine1")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("FilingCommitteeAddressLine2")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("FilingCommitteeCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte>("FilingCommitteeEntityType")
                        .HasColumnType("tinyint");

                    b.Property<string>("FilingCommitteeFecId")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("FilingCommitteeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FilingCommitteePostalCode")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("FilingCommitteeState")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<short?>("FormSubtype")
                        .HasColumnType("smallint");

                    b.Property<byte?>("FormType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsAmendment")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReportPeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReportPeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("TreasurerFirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TreasurerLastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TreasurerMiddleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TreasurerPrefix")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TreasurerSuffix")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ValidationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValidationResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniqueId");

                    b.ToTable("FormBase", "fec");
                });

            modelBuilder.Entity("EfTesting.Dto.Form99Dto", b =>
                {
                    b.HasBaseType("EfTesting.Dto.FormBaseDto");

                    b.Property<byte>("DocumentType")
                        .HasColumnType("tinyint");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Form99", "fec");
                });

            modelBuilder.Entity("EfTesting.Dto.Form99Dto", b =>
                {
                    b.HasOne("EfTesting.Dto.FormBaseDto", null)
                        .WithOne()
                        .HasForeignKey("EfTesting.Dto.Form99Dto", "UniqueId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
